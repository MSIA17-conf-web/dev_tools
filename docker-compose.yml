version: "3.4"

services: 
  portainer:
    image: portainer/portainer
    container_name: portainer
    hostname: portainer
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
      - cert-handler_certbot-letsencrypt:/etc/letsencrypt
    command:
      --ssl
      --sslcert /etc/letsencrypt/live/www.msia17conferences.com/cert.pem
      --sslkey /etc/letsencrypt/live/www.msia17conferences.com/privkey.pem

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    hostname: jenkins
    restart: always
    volumes:
      - jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    environment: 
      - JENKINS_OPTS="--prefix=/jenkins"

  sonarqube:
    image: sonarqube:lts
    container_name: sonarqube
    hostname: sonarqube
    ports:
      - 9000:9000
    environment:
      - sonar.jdbc.username=sonar
      - sonar.jdbc.password=sonar
      - sonar.jdbc.url=jdbc:postgresql://postgres:5432/sonar
      - sonar.web.context=/sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/

  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    container_name: postgres
    hostname: postgres
    ports:
      - 5432:5432
    env_file: ./postgres/pg-env.list
    volumes:
      - postgres_data:/var/lib/postgresql

  pg_admin:
    image: dpage/pgadmin4:latest
    container_name: pg_admin
    hostname: pg_admin
    ports: 
      - 9001:80
    env_file: ./pgadmin/pgadmin-env.list 
    volumes: 
      - pgadmin_data:/var/lib/pgadmin


volumes:
  cert-handler_certbot-letsencrypt:
    external: true
  portainer_data:
    name: portainer_data
  jenkins_data:
    name: jenkins_data
  sonarqube_data:
    name: sonarqube_data
  postgres_data:
    name: postgres_data
  pgadmin_data:
    name: pgadmin_data

networks: 
  default:
    external:
      name: the_network